-- LAB TASK 01

--     i) ACCOUNT
CREATE TABLE ACCOUNTS (
    ACCOUNT_NO CHAR(5)PRIMARY KEY ,
    BALANCE NUMBER NOT NULL CHECK(BALANCE>0)
);

--     II) CUSTOMER
CREATE TABLE CUSTOMER(
    CUSTOMER_NO CHAR(5) PRIMARY KEY,
    CUSTOMER_NAME VARCHAR2(20) NOT NULL,
    CUSTOMER_CITY VARCHAR2(10)
);

--     III) DEPOSITOR
CREATE TABLE DEPOSITOR(
    ACCOUNT_NO CHAR(5),
    CUSTOMER_NO CHAR(5),
    PRIMARY KEY (ACCOUNT_NO, CUSTOMER_NO) 
);


-- LAB TASK 02 (SCHEMA MODIFICATION)

DESC CUSTOMER ;
DESC ACCOUNTS;
DESC DEPOSITOR;

-- I)
ALTER TABLE CUSTOMER ADD DATE_OF_BIRTH DATE ;

 -- II)
ALTER TABLE CUSTOMER DROP COLUMN DATE_OF_BIRTH;
 
-- III)
ALTER TABLE DEPOSITOR RENAME COLUMN ACCOUNT_NO TO A_NO ;
ALTER TABLE DEPOSITOR RENAME COLUMN CUSTOMER_NO TO C_NO;

-- IV)
ALTER TABLE DEPOSITOR ADD CONSTRAINT DEPOSITOR_FK1 FOREIGN KEY (A_NO) REFERENCES ACCOUNTS(ACCOUNT_NO);
ALTER TABLE DEPOSITOR ADD CONSTRAINT DEPOSITOR_FK2 FOREIGN KEY (C_NO) REFERENCES CUSTOMER(CUSTOMER_NO);



-- LAB TASK 03 (INSERTING RECORDS INTO THE TABLES) :

INSERT INTO ACCOUNTS VALUES('A-101',12000);
INSERT INTO ACCOUNTS VALUES('A-102',6000); 
INSERT INTO ACCOUNTS VALUES('A-103',2500); 

INSERT INTO CUSTOMER VALUES ('C-101','ALICE','DHAKA');
INSERT INTO CUSTOMER VALUES ('C-102','ANNIE','DHAKA');
INSERT INTO CUSTOMER VALUES ('C-103','BOB','CHITTAGONG');
INSERT INTO CUSTOMER VALUES ('C-104','CHARLIE','KHULNA');
   
INSERT INTO DEPOSITOR VALUES('A-101','C-101');
INSERT INTO DEPOSITOR VALUES('A-103','C-102');
INSERT INTO DEPOSITOR VALUES('A-103','C-104');
INSERT INTO DEPOSITOR VALUES('A-102','C-103');

SELECT * FROM ACCOUNTS;
SELECT * FROM CUSTOMER;
SELECT * FROM DEPOSITOR;


-- LAB TASK 04(QUERIES)

-- 1) Display customer name and customer city only.
SELECT CUSTOMER_NAME, CUSTOMER_CITY FROM CUSTOMER;


-- 2)Display the unique customer city. No repetations are allow.
SELECT DISTINCT CUSTOMER_CITY FROM CUSTOMER ;


-- 3) Find account number with balance more than 7000.
SELECT * FROM ACCOUNTS WHERE BALANCE > 7000;


-- 4)Find customer number and customer name who live in khulna.
SELECT CUSTOMER_NO , CUSTOMER_NAME FROM CUSTOMER WHERE customer_city = 'KHULNA';


-- 5)Find customer number and customer name who do not live in Dhaka.
SELECT CUSTOMER_NO , CUSTOMER_NAME FROM CUSTOMER WHERE customer_city <> 'DHAKA';


-- 6)Find customer name and customer city who have accounts with balance more than 7000.
SELECT CUSTOMER_NAME , CUSTOMER_CITY 
FROM ACCOUNTS NATURAL JOIN CUSTOMER NATURAL JOIN DEPOSITOR 
WHERE ACCOUNTS.ACCOUNT_NO = DEPOSITOR.A_NO 
AND CUSTOMER.CUSTOMER_NO =DEPOSITOR.C_NO 
AND BALANCE >7000 ;


-- 7) Find customer name and customer city who have accounts with balance more than 7000 and do not live in Khulna.
SELECT CUSTOMER_NAME , CUSTOMER_CITY 
FROM ACCOUNTS NATURAL JOIN CUSTOMER NATURAL JOIN DEPOSITOR 
WHERE ACCOUNTS.ACCOUNT_NO = DEPOSITOR.A_NO 
AND CUSTOMER.CUSTOMER_NO =DEPOSITOR.C_NO 
AND BALANCE >7000 AND CUSTOMER_CITY <> 'KHULNA';


-- 8) Find account number and balance for those accounts which belongs to a customer with id 'C-102'.
SELECT ACCOUNT_NO , BALANCE 
FROM ACCOUNTS NATURAL JOIN DEPOSITOR 
WHERE ACCOUNTS.ACCOUNT_NO = DEPOSITOR.A_NO 
AND C_NO ='C-102';


-- 9)Find all account number and balance for those accounts which belong customers of Dhaka and Khulna city.
SELECT ACCOUNT_NO , BALANCE
FROM ACCOUNTS NATURAL JOIN CUSTOMER NATURAL JOIN DEPOSITOR  
WHERE ACCOUNTS.ACCOUNT_NO = DEPOSITOR.A_NO 
AND CUSTOMER.CUSTOMER_NO =DEPOSITOR.C_NO 
AND ( CUSTOMER_CITY = 'DHAKA'
OR CUSTOMER_CITY = 'KHULNA');


-- 10) Find customer who have no account.

-- 10.1(FIRST MATHOD)
SELECT C_NO FROM DEPOSITOR
WHERE A_NO = 'NULL';

-- 10.2(SECOND MATHOD)
SELECT CUSTOMER_NO, CUSTOMER_NAME
FROM ACCOUNTS NATURAL JOIN CUSTOMER NATURAL JOIN DEPOSITOR
WHERE CUSTOMER.CUSTOMER_NO =DEPOSITOR.C_NO 
AND ACCOUNTS.ACCOUNT_NO = DEPOSITOR.A_NO 
AND A_NO = 'NULL';








